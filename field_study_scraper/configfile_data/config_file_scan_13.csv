,commit_hash,file_path,filename,action,changes
0,0a2254eeafa3445c1fa737b76e9142a04c7977b5,client-adapter/tablestore/src/main/resources/META-INF/canal/com.alibaba.otter.canal.client.adapter.OuterAdapter,com.alibaba.otter.canal.client.adapter.OuterAdapter,1,"{'added': [(1, 'tablestore=com.alibaba.otter.canal.client.adapter.tablestore.TablestoreAdapter')], 'deleted': []}"
1,0a2254eeafa3445c1fa737b76e9142a04c7977b5,client-adapter/tablestore/src/main/resources/tablestore/test.yml,test.yml,1,"{'added': [(1, 'dataSourceKey: defaultDS'), (2, 'destination: test_ots'), (3, 'groupId: g1'), (4, 'outerAdapterKey: mysql1'), (5, 'threads: 1'), (6, 'updateChangeColumns: false'), (7, 'dbMapping:'), (8, '  database: test_ots'), (9, '  table: test'), (10, '  targetTable: canal_target'), (11, '  targetPk:'), (12, '    oId: oId'), (13, '  targetColumns:'), (14, '    oId:'), (15, '    c_id:'), (16, '    p_price:'), (17, '    p_count:'), (18, '  etlCondition:'), (19, '  commitBatch: 1 # 批量提交的大小'), (20, ''), (21, '')], 'deleted': []}"
2,5b6fd8094ab1874268716a06056c1cf307fb155a,connector/pulsarmq-connector/src/main/resources/META-INF/canal/com.alibaba.otter.canal.connector.core.spi.CanalMQProducer,com.alibaba.otter.canal.connector.core.spi.CanalMQProducer,1,"{'added': [(1, 'pulsarmq=com.alibaba.otter.canal.connector.pulsarmq.producer.CanalPulsarMQProducer')], 'deleted': []}"
3,5b6fd8094ab1874268716a06056c1cf307fb155a,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(28, '# tcp, kafka, rocketMQ, rabbitMQ, pulsarMQ'), (174, 'rabbitmq.deliveryMode ='), (175, ''), (176, ''), (177, '##################################################'), (178, '######### \t\t      Pulsar         #############'), (179, '##################################################'), (180, 'pulsarmq.serverUrl ='), (181, 'pulsarmq.roleToken ='), (182, 'pulsarmq.topicTenantPrefix =')], 'deleted': [(28, '# tcp, kafka, rocketMQ, rabbitMQ'), (174, 'rabbitmq.deliveryMode =')]}"
4,5b6fd8094ab1874268716a06056c1cf307fb155a,deployer/src/main/resources/logback.xml,logback.xml,5,"{'added': [(88, '\t<logger name=""com.alibaba.otter.canal.connector.pulsarmq"" additivity=""false"">'), (89, '\t\t<level value=""INFO"" />'), (90, '\t\t<appender-ref ref=""CANAL-ROOT"" />'), (91, '\t</logger>')], 'deleted': []}"
5,997957d6e01f665636204bc37a71fddd3c13e33c,deployer/src/main/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(209, '\t\t<property name=""enableDynamicQueuePartition"" value=""${canal.mq.enableDynamicQueuePartition}"" />')], 'deleted': []}"
6,997957d6e01f665636204bc37a71fddd3c13e33c,deployer/src/main/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(195, '\t\t<property name=""enableDynamicQueuePartition"" value=""${canal.mq.enableDynamicQueuePartition}"" />')], 'deleted': []}"
7,997957d6e01f665636204bc37a71fddd3c13e33c,deployer/src/main/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(290, '\t\t<property name=""enableDynamicQueuePartition"" value=""${canal.mq.enableDynamicQueuePartition}"" />')], 'deleted': []}"
8,997957d6e01f665636204bc37a71fddd3c13e33c,deployer/src/main/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(183, '\t\t<property name=""enableDynamicQueuePartition"" value=""${canal.mq.enableDynamicQueuePartition}"" />')], 'deleted': []}"
9,63407dc57061fd7027927e8cc69366bf9c3e9c1d,client-adapter/launcher/src/main/resources/application.yml,application.yml,5,"{'added': [(97, ""#            kudu.master.address: 127.0.0.1 # ',' split multi address""), (98, '#        - name: phoenix'), (99, '#            key: phoenix'), (100, '#            properties:'), (101, '#              jdbc.driverClassName: org.apache.phoenix.jdbc.PhoenixDriver'), (102, '#              jdbc.url: jdbc:phoenix:127.0.0.1:2181:/hbase/db'), (103, '#              jdbc.username:'), (104, '#              jdbc.password:')], 'deleted': [(97, ""#            kudu.master.address: 127.0.0.1 # ',' split multi address"")]}"
10,63407dc57061fd7027927e8cc69366bf9c3e9c1d,client-adapter/phoenix/src/main/resources/META-INF/canal/com.alibaba.otter.canal.client.adapter.OuterAdapter,com.alibaba.otter.canal.client.adapter.OuterAdapter,1,"{'added': [(1, 'phoenix=com.alibaba.otter.canal.client.adapter.phoenix.PhoenixAdapter')], 'deleted': []}"
11,63407dc57061fd7027927e8cc69366bf9c3e9c1d,client-adapter/phoenix/src/main/resources/hbase-site.xml,hbase-site.xml,1,"{'added': [(1, '<?xml version=""1.0""?>'), (2, '<?xml-stylesheet type=""text/xsl"" href=""configuration.xsl""?>'), (3, '<!--'), (4, '/**'), (5, ' *'), (6, ' * Licensed to the Apache Software Foundation (ASF) under one'), (7, ' * or more contributor license agreements.  See the NOTICE file'), (8, ' * distributed with this work for additional information'), (9, ' * regarding copyright ownership.  The ASF licenses this file'), (10, ' * to you under the Apache License, Version 2.0 (the'), (11, ' * ""License""); you may not use this file except in compliance'), (12, ' * with the License.  You may obtain a copy of the License at'), (13, ' *'), (14, ' *     http://www.apache.org/licenses/LICENSE-2.0'), (15, ' *'), (16, ' * Unless required by applicable law or agreed to in writing, software'), (17, ' * distributed under the License is distributed on an ""AS IS"" BASIS,'), (18, ' * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'), (19, ' * See the License for the specific language governing permissions and'), (20, ' * limitations under the License.'), (21, ' */'), (22, '-->'), (23, '<configuration>'), (24, ''), (25, '  <!--支持NAMESPACE映射 -->'), (26, '   <property>'), (27, '          <name>phoenix.schema.isNamespaceMappingEnabled</name>'), (28, '          <value>true</value>'), (29, '   </property>'), (30, '   <property>'), (31, '          <name>phoenix.schema.mapSystemTablesToNamespace</name>'), (32, '          <value>true</value>'), (33, '   </property>'), (34, '  <!--支持phoenix的二级索引 -->'), (35, '   <property>'), (36, '          <name>hbase.regionserver.wal.codec</name>'), (37, '          <value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>'), (38, '   </property>'), (39, '   <property>'), (40, '        <name>hbase.table.sanity.checks</name>'), (41, '        <value>false</value>'), (42, '   </property>'), (43, '  <!--启动压缩文件检查 -->'), (44, '   <property>'), (45, '     <name>hbase.regionserver.codecs</name>'), (46, '     <value>snappy,lzo</value>'), (47, '   </property>'), (48, '  <!-- rpc 超时时长 -->'), (49, '\t<property>'), (50, '\t  <name>hbase.rpc.timeout</name>'), (51, '\t  <value>1200000</value>'), (52, '\t</property>'), (53, '\t<property>'), (54, '\t  <name>hbase.client.operation.timeout</name>'), (55, '\t  <value>600000</value>'), (56, '\t</property>'), (57, '\t<property>'), (58, '\t  <name>hbase.client.scanner.timeout.period</name>'), (59, '\t  <value>1200000</value>'), (60, '\t</property>'), (61, '\t<property>'), (62, '\t  <name>hbase.client.scanner.timeout.period</name>'), (63, '\t  <value>1200000</value>'), (64, '\t</property>'), (65, '\t<property>'), (66, '\t <name>phoenix.query.timeoutMs</name>'), (67, '\t <value>1800000</value>'), (68, '\t</property>'), (69, '\t<property>'), (70, '\t <name>phoenix.query.keepAliveMs</name>'), (71, '\t <value>600000</value>'), (72, '\t</property>'), (73, '\t<property>'), (74, '\t  <name>hbase.client.ipc.pool.type</name>'), (75, '\t  <value>RoundRobinPool</value>'), (76, '\t</property>'), (77, '\t<property>'), (78, '\t  <name>hbase.client.ipc.pool.size</name>'), (79, '\t  <value>10</value>'), (80, '\t</property>'), (81, '\t<property>'), (82, '\t  <name>index.builder.threads.keepalivetime</name>'), (83, '\t  <value>1200000</value>'), (84, '\t</property>'), (85, '\t<property>'), (86, '\t  <name>index.write.threads.keepalivetime</name>'), (87, '\t  <value>1200000</value>'), (88, '\t</property>'), (89, '\t<property>'), (90, '\t  <name>hbase.htable.threads.keepalivetime</name>'), (91, '\t  <value>1200000</value>'), (92, '\t</property>'), (93, '<!--允许写入自定义WAL编辑，确保索引更新的正确性 -->'), (94, '\t<property>'), (95, '\t  <name>hbase.regionserver.wal.codec</name>'), (96, '\t  <value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>'), (97, '\t</property>'), (98, ''), (99, '</configuration>')], 'deleted': []}"
12,63407dc57061fd7027927e8cc69366bf9c3e9c1d,client-adapter/phoenix/src/main/resources/phoenix/phoenix_common.properties,phoenix_common.properties,1,"{'added': [(1, '# ͬ߳'), (2, 'threads =3')], 'deleted': []}"
13,63407dc57061fd7027927e8cc69366bf9c3e9c1d,client-adapter/phoenix/src/main/resources/phoenix/phoenixtest_user.yml,phoenixtest_user.yml,1,"{'added': [(1, 'dataSourceKey: defaultDS'), (2, 'destination: example'), (3, 'groupId: g1'), (4, 'outerAdapterKey: phoenix'), (5, 'concurrent: true'), (6, 'dbMapping:'), (7, '  database: mytest'), (8, '  table: user'), (9, '  targetTable: mytest.user'), (10, '  escapeUpper: true  # 字段默认大写，并用双引号引起来'), (11, '  targetPk:'), (12, '    id: ID'), (13, '  mapAll: true  # 映射所有字段(默认true，不包含排除的字段)'), (14, '  alter: true   # 允许修改表结构(默认true，mapAll=true时可以新增，drop=true时可以删除字段)'), (15, '  drop: false   # 允许删除字段(默认false)'), (16, '  skipMissing: false # 是否跳过缺失的字段(默认false，允许新增字段时会自动同步缺失的字段;true时跳过缺失的字段)'), (17, '  limit: false  # 是否限与数据长度限制一致(默认false，不限制长度避免修改长度而无法修改)'), (18, '  targetColumns:'), (19, '    id: ID'), (20, '    name: NAME'), (21, '  excludeColumns: # 排除字段'), (22, '    - password')], 'deleted': []}"
14,1369418c6ac96f31c521047060a51e07bc7e00c6,admin/admin-web/src/main/resources/canal-template.properties,canal-template.properties,5,"{'added': [(67, 'canal.instance.filter.dml.insert = false'), (68, 'canal.instance.filter.dml.update = false'), (69, 'canal.instance.filter.dml.delete = false'), (105, ""# set this value to 'true' means that when binlog pos not found, skip to latest.""), (106, ""# WARN: pls keep 'false' in production env, or if you know what you want.""), (107, 'canal.auto.reset.latest.pos.mode = false'), (164, 'rocketmq.tag ='), (173, 'rabbitmq.password ='), (174, 'rabbitmq.deliveryMode =')], 'deleted': [(166, 'rabbitmq.password =')]}"
15,1369418c6ac96f31c521047060a51e07bc7e00c6,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(5, 'canal.ip ='), (19, '# admin auto register'), (20, '#canal.admin.register.auto = true'), (21, '#canal.admin.register.cluster ='), (22, '#canal.admin.register.name ='), (67, 'canal.instance.filter.dml.insert = false'), (68, 'canal.instance.filter.dml.update = false'), (69, 'canal.instance.filter.dml.delete = false'), (164, 'rocketmq.tag =')], 'deleted': [(5, 'canal.ip ='), (63, 'canal.instance.filter.dml.insert=false'), (64, 'canal.instance.filter.dml.update=false'), (65, 'canal.instance.filter.dml.delete=false'), (160, 'rocketmq.tag = testTag')]}"
16,75174a63afed37d2569b7f4930dec3c47923c597,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(5, 'canal.ip ='), (169, 'rabbitmq.password ='), (170, 'rabbitmq.deliveryMode =')], 'deleted': [(5, 'canal.ip ='), (169, 'rabbitmq.password =')]}"
17,17f4ee13e76bee5eb73a85b58d4c867b8621de19,admin/admin-web/src/main/resources/canal-template.properties,canal-template.properties,5,"{'added': [(19, '# admin auto register'), (20, '#canal.admin.register.auto = true'), (21, '#canal.admin.register.cluster ='), (22, '#canal.admin.register.name =')], 'deleted': []}"
18,17f4ee13e76bee5eb73a85b58d4c867b8621de19,deployer/src/main/resources/canal_local.properties,canal_local.properties,5,"{'added': [(11, 'canal.admin.register.cluster ='), (12, 'canal.admin.register.name =')], 'deleted': [(11, 'canal.admin.register.cluster =')]}"
19,a7720b51e4586a626e548556229764b7c38c7bb9,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(160, 'rocketmq.tag = testTag')], 'deleted': []}"
20,21904ef1dced59874da83b3aeb9fa2bbf668de5a,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(63, 'canal.instance.filter.dml.insert=false'), (64, 'canal.instance.filter.dml.update=false'), (65, 'canal.instance.filter.dml.delete=false')], 'deleted': []}"
21,21904ef1dced59874da83b3aeb9fa2bbf668de5a,deployer/src/main/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(177, '\t\t<property name=""filterDmlInsert"" value=""${canal.instance.filter.dml.insert:false}"" />'), (178, '\t\t<property name=""filterDmlUpdate"" value=""${canal.instance.filter.dml.update:false}"" />'), (179, '\t\t<property name=""filterDmlDelete"" value=""${canal.instance.filter.dml.delete:false}"" />')], 'deleted': []}"
22,21904ef1dced59874da83b3aeb9fa2bbf668de5a,deployer/src/main/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(163, '\t\t<property name=""filterDmlInsert"" value=""${canal.instance.filter.dml.insert:false}"" />'), (164, '\t\t<property name=""filterDmlUpdate"" value=""${canal.instance.filter.dml.update:false}"" />'), (165, '\t\t<property name=""filterDmlDelete"" value=""${canal.instance.filter.dml.delete:false}"" />')], 'deleted': []}"
23,21904ef1dced59874da83b3aeb9fa2bbf668de5a,deployer/src/main/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(160, '\t\t<property name=""filterDmlInsert"" value=""${canal.instance.filter.dml.insert:false}"" />'), (161, '\t\t<property name=""filterDmlUpdate"" value=""${canal.instance.filter.dml.update:false}"" />'), (162, '\t\t<property name=""filterDmlDelete"" value=""${canal.instance.filter.dml.delete:false}"" />'), (267, '\t\t<property name=""filterDmlInsert"" value=""${canal.instance.filter.dml.insert:false}"" />'), (268, '\t\t<property name=""filterDmlUpdate"" value=""${canal.instance.filter.dml.update:false}"" />'), (269, '\t\t<property name=""filterDmlDelete"" value=""${canal.instance.filter.dml.delete:false}"" />')], 'deleted': []}"
24,21904ef1dced59874da83b3aeb9fa2bbf668de5a,deployer/src/main/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(151, '\t\t<property name=""filterDmlInsert"" value=""${canal.instance.filter.dml.insert:false}"" />'), (152, '\t\t<property name=""filterDmlUpdate"" value=""${canal.instance.filter.dml.update:false}"" />'), (153, '\t\t<property name=""filterDmlDelete"" value=""${canal.instance.filter.dml.delete:false}"" />')], 'deleted': []}"
25,7857df970125ba9de8e47af48dddd03dc2a9e573,parse/src/test/resources/ddl/ddl_create_if_not_exist.sql,ddl_create_if_not_exist.sql,1,"{'added': [(1, 'CREATE TABLE `table_x1` ('), (2, '    `id` bigint(20) NOT NULL AUTO_INCREMENT,'), (3, ""    `key1` longtext NOT NULL COMMENT 'key1',""), (4, ""    `value1` longtext NOT NULL COMMENT 'value1',""), (5, '    PRIMARY KEY (`id`)'), (6, ') ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;'), (7, ''), (8, 'CREATE TABLE IF NOT EXISTS `table_x1` ('), (9, '    `id` bigint(20) NOT NULL AUTO_INCREMENT,'), (10, ""    `key1` longtext NOT NULL COMMENT 'key1',""), (11, '    PRIMARY KEY (`id`)'), (12, ') ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;')], 'deleted': []}"
26,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(18, '\t\t\t<ref bean=""eventParser"" />'), (21, '\t\t\t<ref bean=""eventSink"" />'), (24, '\t\t\t<ref bean=""eventStore"" />'), (27, '\t\t\t<ref bean=""metaManager"" />'), (30, '\t\t\t<ref bean=""alarmHandler"" />'), (33, '            <ref bean=""mqConfig"" />')], 'deleted': [(18, '\t\t\t<ref local=""eventParser"" />'), (21, '\t\t\t<ref local=""eventSink"" />'), (24, '\t\t\t<ref local=""eventStore"" />'), (27, '\t\t\t<ref local=""metaManager"" />'), (30, '\t\t\t<ref local=""alarmHandler"" />'), (33, '            <ref local=""mqConfig"" />')]}"
27,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(18, '\t\t\t<ref bean=""eventParser"" />'), (21, '\t\t\t<ref bean=""eventSink"" />'), (24, '\t\t\t<ref bean=""eventStore"" />'), (27, '\t\t\t<ref bean=""metaManager"" />'), (30, '\t\t\t<ref bean=""alarmHandler"" />'), (33, '            <ref bean=""mqConfig"" />')], 'deleted': [(18, '\t\t\t<ref local=""eventParser"" />'), (21, '\t\t\t<ref local=""eventSink"" />'), (24, '\t\t\t<ref local=""eventStore"" />'), (27, '\t\t\t<ref local=""metaManager"" />'), (30, '\t\t\t<ref local=""alarmHandler"" />'), (33, '            <ref local=""mqConfig"" />')]}"
28,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(18, '\t\t\t<ref bean=""eventParser"" />'), (21, '\t\t\t<ref bean=""eventSink"" />'), (24, '\t\t\t<ref bean=""eventStore"" />'), (27, '\t\t\t<ref bean=""metaManager"" />'), (30, '\t\t\t<ref bean=""alarmHandler"" />'), (33, '\t\t\t<ref bean=""mqConfig"" />')], 'deleted': [(18, '\t\t\t<ref local=""eventParser"" />'), (21, '\t\t\t<ref local=""eventSink"" />'), (24, '\t\t\t<ref local=""eventStore"" />'), (27, '\t\t\t<ref local=""metaManager"" />'), (30, '\t\t\t<ref local=""alarmHandler"" />'), (33, '\t\t\t<ref local=""mqConfig"" />')]}"
29,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(18, '\t\t\t<ref bean=""eventParser"" />'), (21, '\t\t\t<ref bean=""eventSink"" />'), (24, '\t\t\t<ref bean=""eventStore"" />'), (27, '\t\t\t<ref bean=""metaManager"" />'), (30, '\t\t\t<ref bean=""alarmHandler"" />'), (33, '            <ref bean=""mqConfig"" />')], 'deleted': [(18, '\t\t\t<ref local=""eventParser"" />'), (21, '\t\t\t<ref local=""eventSink"" />'), (24, '\t\t\t<ref local=""eventStore"" />'), (27, '\t\t\t<ref local=""metaManager"" />'), (30, '\t\t\t<ref local=""alarmHandler"" />'), (33, '            <ref local=""mqConfig"" />')]}"
30,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/tsdb/h2-tsdb.xml,h2-tsdb.xml,5,"{'added': [(49, '\t<bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean"">'), (50, '\t\t<property name=""dataSource"" ref=""dataSource""/>'), (51, '\t\t<property name=""configLocation"" value=""classpath:spring/tsdb/sql-map/sqlmap-config.xml""/>'), (52, '\t</bean>'), (55, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>'), (59, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>')], 'deleted': [(49, '    <bean id=""sqlMapClient"" class=""org.springframework.orm.ibatis.SqlMapClientFactoryBean"">'), (50, '        <property name=""dataSource"" ref=""dataSource""/>'), (51, '        <property name=""configLocation"" value=""classpath:spring/tsdb/sql-map/sqlmap-config.xml""/>'), (52, '    </bean>'), (55, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>'), (59, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>')]}"
31,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/tsdb/mysql-tsdb.xml,mysql-tsdb.xml,5,"{'added': [(51, '    <bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean"">'), (57, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>'), (61, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>')], 'deleted': [(51, '    <bean id=""sqlMapClient"" class=""org.springframework.orm.ibatis.SqlMapClientFactoryBean"">'), (57, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>'), (61, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>')]}"
32,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/tsdb/sql-map/sqlmap-config.xml,sqlmap-config.xml,5,"{'added': [(2, '<!DOCTYPE configuration PUBLIC ""-//mybatis.org//DTD Config 3.0//EN""'), (3, '        ""http://mybatis.org/dtd/mybatis-3-config.dtd"">'), (4, '<configuration>'), (5, '    <typeAliases>'), (6, '        <typeAlias alias=""metaHistoryDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryDO""/>'), (7, '        <typeAlias alias=""metaSnapshotDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotDO""/>'), (8, '    </typeAliases>'), (9, ''), (10, '    <mappers>'), (11, '        <mapper resource=""spring/tsdb/sql-map/sqlmap_history.xml""/>'), (12, '        <mapper resource=""spring/tsdb/sql-map/sqlmap_snapshot.xml""/>'), (13, '    </mappers>'), (14, '</configuration>')], 'deleted': [(2, '<!DOCTYPE sqlMapConfig PUBLIC ""-//iBATIS.com//DTD SQL Map Config 2.0//EN""'), (3, '        ""http://www.ibatis.com/dtd/sql-map-config-2.dtd"">'), (4, '<sqlMapConfig>'), (5, '    <settings useStatementNamespaces=""true""/>'), (6, '    <sqlMap resource=""spring/tsdb/sql-map/sqlmap_history.xml""/>'), (7, '    <sqlMap resource=""spring/tsdb/sql-map/sqlmap_snapshot.xml""/>'), (8, '</sqlMapConfig>')]}"
33,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/tsdb/sql-map/sqlmap_history.xml,sqlmap_history.xml,5,"{'added': [(2, '<!DOCTYPE mapper PUBLIC ""-//mybatis.org//DTD Mapper 3.0//EN"" ""http://mybatis.org/dtd/mybatis-3-mapper.dtd"">'), (3, '<mapper namespace=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryMapper"">'), (17, '    <select id=""findByTimestamp"" parameterType=""java.util.Map"" resultType=""metaHistoryDO"">'), (22, '        where destination = #{destination} and binlog_timestamp >= #{snapshotTimestamp} and binlog_timestamp <= #{timestamp}'), (27, '    <insert id=""insert"" parameterType=""metaHistoryDO"">'), (29, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{destination},#{binlogFile},#{binlogOffest},#{binlogMasterId},#{binlogTimestamp},#{useSchema},#{sqlSchema},#{sqlTable},#{sqlText},#{sqlType},#{extra})'), (32, '    <delete id=""deleteByName"" parameterType=""java.util.Map"">'), (34, '        where destination=#{destination}'), (38, '    <delete id=""deleteByTimestamp"" parameterType=""java.util.Map"">'), (41, '\t\twhere destination=#{destination} and binlog_timestamp < #{timestamp}'), (44, '</mapper>')], 'deleted': [(2, '<!DOCTYPE sqlMap PUBLIC ""-//ibatis.apache.org//DTD SQL Map 2.0//EN"" ""http://ibatis.apache.org/dtd/sql-map-2.dtd"" >'), (3, '<sqlMap namespace=""meta_history"">'), (4, '    <typeAlias alias=""metaHistoryDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryDO""/>'), (18, '    <select id=""findByTimestamp"" parameterClass=""java.util.Map"" resultClass=""metaHistoryDO"">'), (23, '        where destination = #destination# and binlog_timestamp >= #snapshotTimestamp# and binlog_timestamp <= #timestamp#'), (28, '    <insert id=""insert"" parameterClass=""metaHistoryDO"">'), (30, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#destination#,#binlogFile#,#binlogOffest#,#binlogMasterId#,#binlogTimestamp#,#useSchema#,#sqlSchema#,#sqlTable#,#sqlText#,#sqlType#,#extra#)'), (33, '    <delete id=""deleteByName"" parameterClass=""java.util.Map"">'), (35, '        where destination=#destination#'), (39, '    <delete id=""deleteByTimestamp"" parameterClass=""java.util.Map"">'), (42, '\t\twhere destination=#destination# and binlog_timestamp < #timestamp#'), (45, '</sqlMap>')]}"
34,20add85ff6db78961222e0dc291ce71fb7efe9e6,deployer/src/main/resources/spring/tsdb/sql-map/sqlmap_snapshot.xml,sqlmap_snapshot.xml,5,"{'added': [(2, '<!DOCTYPE mapper PUBLIC ""-//mybatis.org//DTD Mapper 3.0//EN"" ""http://mybatis.org/dtd/mybatis-3-mapper.dtd"">'), (3, '<mapper namespace=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotMapper"">'), (16, '    <select id=""findByTimestamp"" parameterType=""java.util.Map"" resultType=""metaSnapshotDO"">'), (18, '        <![CDATA['), (20, '        where destination = #{destination} and binlog_timestamp < #{timestamp}'), (25, ''), (26, '    <insert id=""insert"" parameterType=""metaSnapshotDO"">'), (28, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{destination},#{binlogFile},#{binlogOffest},#{binlogMasterId},#{binlogTimestamp},#{data},#{extra})'), (31, '    <update id=""update"" parameterType=""metaSnapshotDO"">'), (33, '        binlog_file=#{binlogFile},binlog_offest=#{binlogOffest},binlog_master_id=#{binlogMasterId},binlog_timestamp=#{binlogTimestamp},data=#{data},extra=#{extra}'), (34, '        where destination=#{destination} and binlog_timestamp=0'), (37, ' \t<delete id=""deleteByName"" parameterType=""java.util.Map"">'), (38, '        delete from meta_snapshot'), (39, '        where destination=#{destination}'), (42, '    <delete id=""deleteByTimestamp"" parameterType=""java.util.Map"">'), (45, '\t\twhere destination=#{destination} and binlog_timestamp < #{timestamp} and binlog_timestamp > 0'), (48, '</mapper>')], 'deleted': [(2, '<!DOCTYPE sqlMap PUBLIC ""-//ibatis.apache.org//DTD SQL Map 2.0//EN"" ""http://ibatis.apache.org/dtd/sql-map-2.dtd"" >'), (3, '<sqlMap namespace=""meta_snapshot"">'), (4, '    <typeAlias alias=""metaSnapshotDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotDO""/>'), (5, '    <typeAlias alias=""tableMetaSnapshotDO""'), (6, '               type=""com.alibaba.middleware.jingwei.biz.dataobject.CanalTableMetaSnapshotDO""/>'), (19, '    <select id=""findByTimestamp"" parameterClass=""java.util.Map"" resultClass=""metaSnapshotDO"">'), (21, '    \t<![CDATA['), (23, '        where destination = #destination# and binlog_timestamp < #timestamp#'), (28, ''), (29, '    <insert id=""insert"" parameterClass=""metaSnapshotDO"">'), (31, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#destination#,#binlogFile#,#binlogOffest#,#binlogMasterId#,#binlogTimestamp#,#data#,#extra#)'), (34, '    <update id=""update"" parameterClass=""metaSnapshotDO"">'), (36, '        binlog_file=#binlogFile#,binlog_offest=#binlogOffest#,binlog_master_id=#binlogMasterId#,binlog_timestamp=#binlogTimestamp#,data=#data#,extra=#extra#'), (37, '        where destination=#destination# and binlog_timestamp=0'), (40, ' \t<delete id=""deleteByName"" parameterClass=""java.util.Map"">'), (41, '        delete from meta_snapshot'), (42, '        where destination=#destination#'), (45, '    <delete id=""deleteByTimestamp"" parameterClass=""java.util.Map"">'), (48, '\t\twhere destination=#destination# and binlog_timestamp < #timestamp# and binlog_timestamp > 0'), (51, '</sqlMap>')]}"
35,20add85ff6db78961222e0dc291ce71fb7efe9e6,instance/spring/src/test/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(37, '\t\t\t<ref bean=""eventParser"" />'), (40, '\t\t\t<ref bean=""eventSink"" />'), (43, '\t\t\t<ref bean=""eventStore"" />'), (46, '\t\t\t<ref bean=""metaManager"" />'), (49, '\t\t\t<ref bean=""alarmHandler"" />')], 'deleted': [(37, '\t\t\t<ref local=""eventParser"" />'), (40, '\t\t\t<ref local=""eventSink"" />'), (43, '\t\t\t<ref local=""eventStore"" />'), (46, '\t\t\t<ref local=""metaManager"" />'), (49, '\t\t\t<ref local=""alarmHandler"" />')]}"
36,20add85ff6db78961222e0dc291ce71fb7efe9e6,instance/spring/src/test/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(37, '\t\t\t<ref bean=""eventParser"" />'), (40, '\t\t\t<ref bean=""eventSink"" />'), (43, '\t\t\t<ref bean=""eventStore"" />'), (46, '\t\t\t<ref bean=""metaManager"" />'), (49, '\t\t\t<ref bean=""alarmHandler"" />')], 'deleted': [(37, '\t\t\t<ref local=""eventParser"" />'), (40, '\t\t\t<ref local=""eventSink"" />'), (43, '\t\t\t<ref local=""eventStore"" />'), (46, '\t\t\t<ref local=""metaManager"" />'), (49, '\t\t\t<ref local=""alarmHandler"" />')]}"
37,20add85ff6db78961222e0dc291ce71fb7efe9e6,instance/spring/src/test/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(37, '\t\t\t<ref bean=""eventParser"" />'), (40, '\t\t\t<ref bean=""eventSink"" />'), (43, '\t\t\t<ref bean=""eventStore"" />'), (46, '\t\t\t<ref bean=""metaManager"" />'), (49, '\t\t\t<ref bean=""alarmHandler"" />')], 'deleted': [(37, '\t\t\t<ref local=""eventParser"" />'), (40, '\t\t\t<ref local=""eventSink"" />'), (43, '\t\t\t<ref local=""eventStore"" />'), (46, '\t\t\t<ref local=""metaManager"" />'), (49, '\t\t\t<ref local=""alarmHandler"" />')]}"
38,20add85ff6db78961222e0dc291ce71fb7efe9e6,instance/spring/src/test/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(37, '\t\t\t<ref bean=""eventParser"" />'), (40, '\t\t\t<ref bean=""eventSink"" />'), (43, '\t\t\t<ref bean=""eventStore"" />'), (46, '\t\t\t<ref bean=""metaManager"" />'), (49, '\t\t\t<ref bean=""alarmHandler"" />')], 'deleted': [(37, '\t\t\t<ref local=""eventParser"" />'), (40, '\t\t\t<ref local=""eventSink"" />'), (43, '\t\t\t<ref local=""eventStore"" />'), (46, '\t\t\t<ref local=""metaManager"" />'), (49, '\t\t\t<ref local=""alarmHandler"" />')]}"
39,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/derby-tsdb.xml,derby-tsdb.xml,5,"{'added': [(32, '    <bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean"">'), (38, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>'), (42, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>')], 'deleted': [(32, '    <bean id=""sqlMapClient"" class=""org.springframework.orm.ibatis.SqlMapClientFactoryBean"">'), (38, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>'), (42, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>')]}"
40,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/h2-tsdb.xml,h2-tsdb.xml,5,"{'added': [(32, '    <bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean"">'), (38, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>'), (42, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>')], 'deleted': [(32, '    <bean id=""sqlMapClient"" class=""org.springframework.orm.ibatis.SqlMapClientFactoryBean"">'), (38, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>'), (42, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>')]}"
41,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/mysql-tsdb.xml,mysql-tsdb.xml,5,"{'added': [(35, '    <bean id=""sqlSessionFactory"" class=""org.mybatis.spring.SqlSessionFactoryBean"">'), (41, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>'), (45, '        <property name=""sqlSessionFactory"" ref=""sqlSessionFactory""/>')], 'deleted': [(35, '    <bean id=""sqlMapClient"" class=""org.springframework.orm.ibatis.SqlMapClientFactoryBean"">'), (41, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>'), (45, '        <property name=""sqlMapClient"" ref=""sqlMapClient""/>')]}"
42,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/sql-map/sqlmap-config.xml,sqlmap-config.xml,5,"{'added': [(2, '<!DOCTYPE configuration PUBLIC ""-//mybatis.org//DTD Config 3.0//EN""'), (3, '        ""http://mybatis.org/dtd/mybatis-3-config.dtd"">'), (4, '<configuration>'), (5, '    <typeAliases>'), (6, '        <typeAlias alias=""metaHistoryDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryDO""/>'), (7, '        <typeAlias alias=""metaSnapshotDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotDO""/>'), (8, '    </typeAliases>'), (9, ''), (10, '    <mappers>'), (11, '        <mapper resource=""tsdb/sql-map/sqlmap_history.xml""/>'), (12, '        <mapper resource=""tsdb/sql-map/sqlmap_snapshot.xml""/>'), (13, '    </mappers>'), (14, '</configuration>')], 'deleted': [(2, '<!DOCTYPE sqlMapConfig PUBLIC ""-//iBATIS.com//DTD SQL Map Config 2.0//EN""'), (3, '        ""http://www.ibatis.com/dtd/sql-map-config-2.dtd"">'), (4, '<sqlMapConfig>'), (5, '    <settings useStatementNamespaces=""true""/>'), (6, '    <sqlMap resource=""tsdb/sql-map/sqlmap_history.xml""/>'), (7, '    <sqlMap resource=""tsdb/sql-map/sqlmap_snapshot.xml""/>'), (8, '</sqlMapConfig>')]}"
43,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/sql-map/sqlmap_history.xml,sqlmap_history.xml,5,"{'added': [(2, '<!DOCTYPE mapper PUBLIC ""-//mybatis.org//DTD Mapper 3.0//EN"" ""http://mybatis.org/dtd/mybatis-3-mapper.dtd"">'), (3, '<mapper namespace=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryMapper"">'), (17, '    <select id=""findByTimestamp"" parameterType=""java.util.Map"" resultType=""metaHistoryDO"">'), (22, '        where destination = #{destination} and binlog_timestamp >= #{snapshotTimestamp} and binlog_timestamp <= #{timestamp}'), (27, '    <insert id=""insert"" parameterType=""metaHistoryDO"">'), (29, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{destination},#{binlogFile},#{binlogOffest},#{binlogMasterId},#{binlogTimestamp},#{useSchema},#{sqlSchema},#{sqlTable},#{sqlText},#{sqlType},#{extra})'), (31, ''), (32, '    <delete id=""deleteByName"" parameterType=""java.util.Map"">'), (33, '        delete from meta_history'), (34, '        where destination=#{destination}'), (38, '    <delete id=""deleteByTimestamp"" parameterType=""java.util.Map"">'), (41, '\t\twhere destination=#{destination} and binlog_timestamp < #{timestamp}'), (44, '</mapper>')], 'deleted': [(2, '<!DOCTYPE sqlMap PUBLIC ""-//ibatis.apache.org//DTD SQL Map 2.0//EN"" ""http://ibatis.apache.org/dtd/sql-map-2.dtd"" >'), (3, '<sqlMap namespace=""meta_history"">'), (4, '    <typeAlias alias=""metaHistoryDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaHistoryDO""/>'), (18, '    <select id=""findByTimestamp"" parameterClass=""java.util.Map"" resultClass=""metaHistoryDO"">'), (23, '        where destination = #destination# and binlog_timestamp >= #snapshotTimestamp# and binlog_timestamp <= #timestamp#'), (28, '    <insert id=""insert"" parameterClass=""metaHistoryDO"">'), (30, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#destination#,#binlogFile#,#binlogOffest#,#binlogMasterId#,#binlogTimestamp#,#useSchema#,#sqlSchema#,#sqlTable#,#sqlText#,#sqlType#,#extra#)'), (32, ''), (33, '    <delete id=""deleteByName"" parameterClass=""java.util.Map"">'), (34, '        delete from meta_history'), (35, '        where destination=#destination#'), (39, '    <delete id=""deleteByTimestamp"" parameterClass=""java.util.Map"">'), (42, '\t\twhere destination=#destination# and binlog_timestamp < #timestamp#'), (45, '</sqlMap>')]}"
44,20add85ff6db78961222e0dc291ce71fb7efe9e6,parse/src/test/resources/tsdb/sql-map/sqlmap_snapshot.xml,sqlmap_snapshot.xml,5,"{'added': [(2, '<!DOCTYPE mapper PUBLIC ""-//mybatis.org//DTD Mapper 3.0//EN"" ""http://mybatis.org/dtd/mybatis-3-mapper.dtd"">'), (3, '<mapper namespace=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotMapper"">'), (16, '    <select id=""findByTimestamp"" parameterType=""java.util.Map"" resultType=""metaSnapshotDO"">'), (17, '        select <include refid=""allVOColumns""/>'), (18, '        <![CDATA['), (20, '        where destination = #{destination} and binlog_timestamp < #{timestamp}'), (26, '    <insert id=""insert"" parameterType=""metaSnapshotDO"">'), (28, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#{destination},#{binlogFile},#{binlogOffest},#{binlogMasterId},#{binlogTimestamp},#{data},#{extra})'), (31, '    <update id=""update"" parameterType=""metaSnapshotDO"">'), (33, '        binlog_file=#{binlogFile},binlog_offest=#{binlogOffest},binlog_master_id=#{binlogMasterId},binlog_timestamp=#{binlogTimestamp},data=#{data},extra=#{extra}'), (34, '        where destination=#{destination} and binlog_timestamp=0'), (37, '    <delete id=""deleteByName"" parameterType=""java.util.Map"">'), (38, '        delete from meta_snapshot'), (39, '        where destination=#{destination}'), (42, '    <delete id=""deleteByTimestamp"" parameterType=""java.util.Map"">'), (45, '\t\twhere destination=#{destination} and binlog_timestamp < #{timestamp} and binlog_timestamp > 0'), (48, '</mapper>')], 'deleted': [(2, '<!DOCTYPE sqlMap PUBLIC ""-//ibatis.apache.org//DTD SQL Map 2.0//EN"" ""http://ibatis.apache.org/dtd/sql-map-2.dtd"" >'), (3, '<sqlMap namespace=""meta_snapshot"">'), (4, '    <typeAlias alias=""metaSnapshotDO"" type=""com.alibaba.otter.canal.parse.inbound.mysql.tsdb.dao.MetaSnapshotDO""/>'), (5, '    <typeAlias alias=""tableMetaSnapshotDO""'), (6, '               type=""com.alibaba.middleware.jingwei.biz.dataobject.CanalTableMetaSnapshotDO""/>'), (19, '    <select id=""findByTimestamp"" parameterClass=""java.util.Map"" resultClass=""metaSnapshotDO"">'), (20, '    \tselect <include refid=""allVOColumns""/>'), (21, '    \t<![CDATA['), (23, '        where destination = #destination# and binlog_timestamp < #timestamp#'), (28, ''), (29, '     <select id=""findByTimestampOnDerby"" parameterClass=""java.util.Map"" resultClass=""metaSnapshotDO"">'), (30, '   \t\tselect * FROM ('), (31, '   \t\tselect ROW_NUMBER() OVER() AS rownum, <include refid=""allVOColumns""/>'), (32, '   \t\t<![CDATA['), (33, '   \t\tfrom meta_snapshot a'), (34, '   \t\twhere destination = #destination# and binlog_timestamp < #timestamp#'), (35, '        order by binlog_timestamp desc,id desc'), (36, '\t\t) AS tmp'), (37, '\t\tWHERE rownum <= 5'), (38, '\t\t]]>'), (39, '    </select>'), (41, '    <insert id=""insert"" parameterClass=""metaSnapshotDO"">'), (43, '        values(CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,#destination#,#binlogFile#,#binlogOffest#,#binlogMasterId#,#binlogTimestamp#,#data#,#extra#)'), (46, '    <update id=""update"" parameterClass=""metaSnapshotDO"">'), (48, '        binlog_file=#binlogFile#,binlog_offest=#binlogOffest#,binlog_master_id=#binlogMasterId#,binlog_timestamp=#binlogTimestamp#,data=#data#,extra=#extra#'), (49, '        where destination=#destination# and binlog_timestamp=0'), (52, ' \t<delete id=""deleteByName"" parameterClass=""java.util.Map"">'), (53, '        delete from meta_snapshot'), (54, '        where destination=#destination#'), (57, '    <delete id=""deleteByTimestamp"" parameterClass=""java.util.Map"">'), (60, '\t\twhere destination=#destination# and binlog_timestamp < #timestamp# and binlog_timestamp > 0'), (63, '</sqlMap>')]}"
45,de1dd7060939ee4a47691cc24887b07fedf59253,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(98, ""# set this value to 'true' means that when binlog pos not found, skip to latest.""), (99, ""# WARN: pls keep 'false' in production env, or if you know what you want.""), (100, 'canal.auto.reset.latest.pos.mode = false')], 'deleted': []}"
46,de1dd7060939ee4a47691cc24887b07fedf59253,deployer/src/main/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(195, ''), (196, '\t\t<property name=""autoResetLatestPosMode"" value=""${canal.auto.reset.latest.pos.mode:false}"" />')], 'deleted': []}"
47,de1dd7060939ee4a47691cc24887b07fedf59253,deployer/src/main/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(181, ''), (182, '\t\t<property name=""autoResetLatestPosMode"" value=""${canal.auto.reset.latest.pos.mode:false}"" />')], 'deleted': []}"
48,de1dd7060939ee4a47691cc24887b07fedf59253,deployer/src/main/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(168, ''), (169, '\t\t<property name=""autoResetLatestPosMode"" value=""${canal.auto.reset.latest.pos.mode:false}"" />'), (273, ''), (274, '\t\t<property name=""autoResetLatestPosMode"" value=""${canal.auto.reset.latest.pos.mode:false}"" />')], 'deleted': []}"
49,de1dd7060939ee4a47691cc24887b07fedf59253,deployer/src/main/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(169, ''), (170, '\t\t<property name=""autoResetLatestPosMode"" value=""${canal.auto.reset.latest.pos.mode:false}"" />')], 'deleted': []}"
50,b81e9dfeb860ac03e9c693ef01269bcbc169ca56,deployer/src/main/resources/example/instance.properties,instance.properties,5,"{'added': [(57, '#canal.mq.dynamicTopicPartitionNum=test.*:4,mycanal:6')], 'deleted': []}"
51,b81e9dfeb860ac03e9c693ef01269bcbc169ca56,deployer/src/main/resources/spring/default-instance.xml,default-instance.xml,5,"{'added': [(203, '\t\t<property name=""dynamicTopicPartitionNum"" value=""${canal.mq.dynamicTopicPartitionNum}"" />')], 'deleted': []}"
52,b81e9dfeb860ac03e9c693ef01269bcbc169ca56,deployer/src/main/resources/spring/file-instance.xml,file-instance.xml,5,"{'added': [(189, '\t\t<property name=""dynamicTopicPartitionNum"" value=""${canal.mq.dynamicTopicPartitionNum}"" />')], 'deleted': []}"
53,b81e9dfeb860ac03e9c693ef01269bcbc169ca56,deployer/src/main/resources/spring/group-instance.xml,group-instance.xml,5,"{'added': [(279, '\t\t<property name=""dynamicTopicPartitionNum"" value=""${canal.mq.dynamicTopicPartitionNum}"" />')], 'deleted': []}"
54,b81e9dfeb860ac03e9c693ef01269bcbc169ca56,deployer/src/main/resources/spring/memory-instance.xml,memory-instance.xml,5,"{'added': [(177, '\t\t<property name=""dynamicTopicPartitionNum"" value=""${canal.mq.dynamicTopicPartitionNum}"" />')], 'deleted': []}"
55,b79af4605468519481111233569612abc19b65a7,admin/admin-web/src/main/resources/canal-template.properties,canal-template.properties,5,"{'added': [(11, '# canal.user = canal'), (12, '# canal.passwd = E3619321C1A937C46A0D8BD1DAC39F93B27D4458'), (15, '#canal.admin.manager = 127.0.0.1:8089'), (24, '# tcp, kafka, rocketMQ, rabbitMQ'), (92, 'canal.destinations ='), (110, '######### \t      MQ Properties      #############'), (112, '# aliyun ak/sk , support rds/mq'), (113, 'canal.aliyun.accessKey ='), (114, 'canal.aliyun.secretKey ='), (115, 'canal.aliyun.uid='), (116, ''), (117, 'canal.mq.flatMessage = true'), (122, ''), (123, 'canal.mq.database.hash = true'), (124, 'canal.mq.send.thread.size = 30'), (125, 'canal.mq.build.thread.size = 8'), (126, ''), (127, '##################################################'), (128, '######### \t\t     Kafka \t\t     #############'), (129, '##################################################'), (130, 'kafka.bootstrap.servers = 127.0.0.1:6667'), (131, 'kafka.acks = all'), (132, 'kafka.compression.type = none'), (133, 'kafka.batch.size = 16384'), (134, 'kafka.linger.ms = 1'), (135, 'kafka.max.request.size = 1048576'), (136, 'kafka.buffer.memory = 33554432'), (137, 'kafka.max.in.flight.requests.per.connection = 1'), (138, 'kafka.retries = 0'), (139, ''), (140, 'kafka.kerberos.enable = false'), (141, 'kafka.kerberos.krb5.file = ""../conf/kerberos/krb5.conf""'), (142, 'kafka.kerberos.jaas.file = ""../conf/kerberos/jaas.conf""'), (143, ''), (144, '##################################################'), (145, '######### \t\t    RocketMQ\t     #############'), (146, '##################################################'), (147, 'rocketmq.producer.group = test'), (148, 'rocketmq.enable.message.trace = false'), (149, 'rocketmq.customized.trace.topic ='), (150, 'rocketmq.namespace ='), (151, 'rocketmq.namesrv.addr = 127.0.0.1:9876'), (152, 'rocketmq.retry.times.when.send.failed = 0'), (153, 'rocketmq.vip.channel.enabled = false'), (156, '######### \t\t    RabbitMQ\t     #############'), (158, 'rabbitmq.host ='), (159, 'rabbitmq.virtual.host ='), (160, 'rabbitmq.exchange ='), (161, 'rabbitmq.username ='), (162, 'rabbitmq.password =')], 'deleted': [(11, 'canal.user = canal'), (12, 'canal.passwd = E3619321C1A937C46A0D8BD1DAC39F93B27D4458'), (15, 'canal.admin.manager = 127.0.0.1:8089'), (24, '# tcp, kafka, RocketMQ'), (89, '# aliyun ak/sk , support rds/mq'), (90, 'canal.aliyun.accessKey ='), (91, 'canal.aliyun.secretKey ='), (92, ''), (96, 'canal.destinations ='), (114, '######### \t\t     MQ \t\t     #############'), (116, 'canal.mq.servers = 127.0.0.1:6667'), (117, 'canal.mq.retries = 0'), (118, 'canal.mq.batchSize = 16384'), (119, 'canal.mq.maxRequestSize = 1048576'), (120, 'canal.mq.lingerMs = 100'), (121, 'canal.mq.bufferMemory = 33554432'), (124, 'canal.mq.flatMessage = true'), (125, 'canal.mq.compressionType = none'), (126, 'canal.mq.acks = all'), (127, '#canal.mq.properties. ='), (128, 'canal.mq.producerGroup = test'), (131, '# aliyun mq namespace'), (132, '#canal.mq.namespace ='), (135, '#########     Kafka Kerberos Info    #############'), (137, 'canal.mq.kafka.kerberos.enable = false'), (138, 'canal.mq.kafka.kerberos.krb5FilePath = ""../conf/kerberos/krb5.conf""'), (139, 'canal.mq.kafka.kerberos.jaasFilePath = ""../conf/kerberos/jaas.conf""')]}"
56,b79af4605468519481111233569612abc19b65a7,deployer/src/main/resources/canal.properties,canal.properties,5,"{'added': [(117, 'canal.mq.flatMessage = true'), (118, 'canal.mq.canalBatchSize = 50'), (119, 'canal.mq.canalGetTimeout = 100'), (120, '# Set this value to ""cloud"", if you want open message trace feature in aliyun.'), (121, 'canal.mq.accessChannel = local'), (122, ''), (123, 'canal.mq.database.hash = true'), (124, 'canal.mq.send.thread.size = 30'), (125, 'canal.mq.build.thread.size = 8'), (126, ''), (140, 'kafka.kerberos.enable = false'), (141, 'kafka.kerberos.krb5.file = ""../conf/kerberos/krb5.conf""'), (142, 'kafka.kerberos.jaas.file = ""../conf/kerberos/jaas.conf""')], 'deleted': [(112, 'canal.mq.flat.message = true'), (113, 'canal.mq.database.hash = true'), (114, 'canal.mq.parallel.thread.size = 8'), (115, 'canal.mq.canal.batch.size = 50'), (116, 'canal.mq.canal.fetch.timeout = 100'), (117, '# Set this value to ""cloud"", if you want open message trace feature in aliyun.'), (118, 'canal.mq.access.channel = local'), (119, ''), (138, 'canal.mq.kafka.kerberos.enable = false'), (139, 'canal.mq.kafka.kerberos.krb5.file = ""../conf/kerberos/krb5.conf""'), (140, 'canal.mq.kafka.kerberos.jaas.file = ""../conf/kerberos/jaas.conf""')]}"
57,b79af4605468519481111233569612abc19b65a7,deployer/src/main/resources/example/instance.properties,instance.properties,5,"{'added': [(43, 'canal.instance.filter.black.regex=mysql\\\\.slave_.*')], 'deleted': [(43, 'canal.instance.filter.black.regex=')]}"
58,b2b2a82554d2876a4fd29f77e38e05cf72580c8b,client-adapter/kudu/src/main/resources/META-INF.canal/com.alibaba.otter.canal.client.adapter.OuterAdapter,com.alibaba.otter.canal.client.adapter.OuterAdapter,1,"{'added': [(1, 'kudu=com.alibaba.otter.canal.client.adapter.kudu.KuduAdapter')], 'deleted': []}"
59,b2b2a82554d2876a4fd29f77e38e05cf72580c8b,client-adapter/kudu/src/main/resources/kudu/kudutest_user.yml,kudutest_user.yml,1,"{'added': [(1, 'dataSourceKey: defaultDS'), (2, 'destination: test_instance'), (3, 'outerAdapterKey: kudu'), (4, 'groupId: g1'), (5, 'kuduMapping:'), (6, '  database: test'), (7, '  table: test'), (8, '  targetTable: test'), (9, '  targetPk:'), (10, '    id: id'), (11, '  mapAll: true'), (12, '  targetColumns:'), (13, '    id:'), (14, '    name:'), (15, '    role_id:'), (16, '    c_time:'), (17, '    test1:'), (18, '  etlCondition:'), (19, '  commitBatch: 3000 # 批量提交的大小')], 'deleted': []}"
60,b2b2a82554d2876a4fd29f77e38e05cf72580c8b,client-adapter/launcher/src/main/resources/application.yml,application.yml,5,"{'added': [(94, '#        - name: kudu'), (95, '#          key: kudu'), (96, '#          properties:'), (97, ""#            kudu.master.address: 127.0.0.1 # ',' split multi address"")], 'deleted': [(94, '')]}"
